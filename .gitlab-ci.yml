image: python:3.6

stages:
  - build
  - test
  - deploy

lint:
  stage: build
  script:
    - python -m pip install flake8
    - flake8 --max-line-length=120 .

build-doc:
  stage: test
  script:
    - apt-get update
    - apt-get install -y make pandoc
    - python -m pip install --upgrade pip
    - python -m pip install -r requirements-docs.txt
    - (cd docs && /usr/bin/make html)
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'   # Execute jobs when a new commit is pushed to master branch
    - if: $CI_MERGE_REQUEST_ID            # Execute jobs in merge request context

py36:unit-tests:
  stage: test
  script:
    - python -m pip install --upgrade pip
    - python -m pip install -r requirements-dev.txt
    - mkdir -p test-reports
    - |
      nosetests -v --cover-package=eodag\
                    --with-xunit --xunit-file test-reports/eodag_test_report_py36.xml\
                    --with-coverage --cover-xml --cover-xml-file test-reports/eodag_test_coverage_report_py36.xml\
                    --with-doctest\
                    --cover-erase\
                    --cover-inclusive\
                    --ignore-files=test_end_to_end.py\
                    eodag tests
  artifacts:
    when: always
    reports:
      junit: test-reports/eodag_test_report_py36.xml
      cobertura: test-reports/eodag_test_coverage_report_py36.xml
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'   # Execute jobs when a new commit is pushed to master branch
    - if: $CI_MERGE_REQUEST_ID            # Execute jobs in merge request context

pypi:deploy:
  stage: deploy
  script:
    # Build and Deploy to PyPI
    # Install sphinx to have rst2html.py utility available
    - python -m pip install sphinx twine
    - |
      if [ "$(./get_pypi_latest_version.sh)" != "$(python setup.py --version)" ]
      then
        # Check that the long description is ready to be published on PyPI without errors
        python setup.py --long-description | rst2html.py > /dev/null 2>error.log
        if [ ! "$(cat error.log)" ]
        then
          # Build the distribution
          python setup.py sdist bdist_wheel
          TWINE_REPOSITORY_URL=$TWINE_REPOSITORY_URL TWINE_USERNAME=$TWINE_USERNAME TWINE_PASSWORD=$TWINE_PASSWORD \
            twine upload dist/*
        else
          echo "Long description is incompatible with PyPI reST renderer. Check README.rst"
          cat error.log
          exit 1
        fi
      else
        echo "Current version is the latest version uploaded to PyPI"
        exit 1
      fi
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+.*/'
